/*
 * Copyright (c) 2021-2021
 * *********** Reversing Team and Stay Development Team.
 * All Rights Reserved.
 *
 * ***********' Github website: https://github.com/ ***********
 * This file was created by SagiriXiguajerry at 2021/12/9 下午10:43
 */
@file:Suppress("unused")
package me.alpha432.stay.util.graphics.opengl.dsl

import org.lwjgl.opengl.GL11.*
import java.nio.ByteBuffer
import java.nio.IntBuffer
import java.nio.ShortBuffer

typealias I = Int
typealias F = Float
typealias D = Double
typealias L = Long
typealias S = Short
typealias B = Byte
typealias BBuffer = ByteBuffer
typealias IBuffer = IntBuffer
typealias SBuffer = ShortBuffer

fun pushMatrix(block: OpenGLBuilder.() -> Unit): OpenGLBuilder {
    val builder = OpenGLBuilder()
    builder.pushMatrix()
    builder.block()
    return builder
}

class OpenGLBuilder {
    val ACCUM = 0x100
    val LOAD = 0x101
    val RETURN = 0x102
    val MULT = 0x103
    val ADD = 0x104
    val NEVER = 0x200
    val LESS = 0x201
    val EQUAL = 0x202
    val LEQUAL = 0x203
    val GREATER = 0x204
    val NOTEQUAL = 0x205
    val GEQUAL = 0x206
    val ALWAYS = 0x207
    val CURRENT_BIT = 0x1
    val POINT_BIT = 0x2
    val LINE_BIT = 0x4
    val POLYGON_BIT = 0x8
    val POLYGON_STIPPLE_BIT = 0x10
    val PIXEL_MODE_BIT = 0x20
    val LIGHTING_BIT = 0x40
    val FOG_BIT = 0x80
    val DEPTH_BUFFER_BIT = 0x100
    val ACCUM_BUFFER_BIT = 0x200
    val STENCIL_BUFFER_BIT = 0x400
    val VIEWPORT_BIT = 0x800
    val TRANSFORM_BIT = 0x1000
    val ENABLE_BIT = 0x2000
    val COLOR_BUFFER_BIT = 0x4000
    val HINT_BIT = 0x8000
    val EVAL_BIT = 0x10000
    val LIST_BIT = 0x20000
    val TEXTURE_BIT = 0x40000
    val SCISSOR_BIT = 0x80000
    val ALL_ATTRIB_BITS = 0xFFFFF
    val POINTS = 0x0
    val LINES = 0x1
    val LINE_LOOP = 0x2
    val LINE_STRIP = 0x3
    val TRIANGLES = 0x4
    val TRIANGLE_STRIP = 0x5
    val TRIANGLE_FAN = 0x6
    val QUADS = 0x7
    val QUAD_STRIP = 0x8
    val POLYGON = 0x9
    val ZERO = 0x0
    val ONE = 0x1
    val SRC_COLOR = 0x300
    val ONE_MINUS_SRC_COLOR = 0x301
    val SRC_ALPHA = 0x302
    val ONE_MINUS_SRC_ALPHA = 0x303
    val DST_ALPHA = 0x304
    val ONE_MINUS_DST_ALPHA = 0x305
    val DST_COLOR = 0x306
    val ONE_MINUS_DST_COLOR = 0x307
    val SRC_ALPHA_SATURATE = 0x308
    val CONSTANT_COLOR = 0x8001
    val ONE_MINUS_CONSTANT_COLOR = 0x8002
    val CONSTANT_ALPHA = 0x8003
    val ONE_MINUS_CONSTANT_ALPHA = 0x8004
    val TRUE = 0x1
    val FALSE = 0x0
    val CLIP_PLANE0 = 0x3000
    val CLIP_PLANE1 = 0x3001
    val CLIP_PLANE2 = 0x3002
    val CLIP_PLANE3 = 0x3003
    val CLIP_PLANE4 = 0x3004
    val CLIP_PLANE5 = 0x3005
    val BYTE = 0x1400
    val UNSIGNED_BYTE = 0x1401
    val SHORT = 0x1402
    val UNSIGNED_SHORT = 0x1403
    val INT = 0x1404
    val UNSIGNED_INT = 0x1405
    val FLOAT = 0x1406
    val GL_2_BYTES = 0x1407
    val GL_3_BYTES = 0x1408
    val GL_4_BYTES = 0x1409
    val DOUBLE = 0x140A
    val NONE = 0x0
    val FRONT_LEFT = 0x400
    val FRONT_RIGHT = 0x401
    val BACK_LEFT = 0x402
    val BACK_RIGHT = 0x403
    val FRONT = 0x404
    val BACK = 0x405
    val LEFT = 0x406
    val RIGHT = 0x407
    val FRONT_AND_BACK = 0x408
    val AUX0 = 0x409
    val AUX1 = 0x40A
    val AUX2 = 0x40B
    val AUX3 = 0x40C
    val NO_ERROR = 0x0
    val INVALID_ENUM = 0x500
    val INVALID_VALUE = 0x501
    val INVALID_OPERATION = 0x502
    val STACK_OVERFLOW = 0x503
    val STACK_UNDERFLOW = 0x504
    val OUT_OF_MEMORY = 0x505
    val GL_2D = 0x600
    val GL_3D = 0x601
    val GL_3D_COLOR = 0x602
    val GL_3D_COLOR_TEXTURE = 0x603
    val GL_4D_COLOR_TEXTURE = 0x604
    val PASS_THROUGH_TOKEN = 0x700
    val POINT_TOKEN = 0x701
    val LINE_TOKEN = 0x702
    val POLYGON_TOKEN = 0x703
    val BITMAP_TOKEN = 0x704
    val DRAW_PIXEL_TOKEN = 0x705
    val COPY_PIXEL_TOKEN = 0x706
    val LINE_RESET_TOKEN = 0x707
    val EXP = 0x800
    val EXP2 = 0x801
    val CW = 0x900
    val CCW = 0x901
    val COEFF = 0xA00
    val ORDER = 0xA01
    val DOMAIN = 0xA02
    val CURRENT_COLOR = 0xB00
    val CURRENT_INDEX = 0xB01
    val CURRENT_NORMAL = 0xB02
    val CURRENT_TEXTURE_COORDS = 0xB03
    val CURRENT_RASTER_COLOR = 0xB04
    val CURRENT_RASTER_INDEX = 0xB05
    val CURRENT_RASTER_TEXTURE_COORDS = 0xB06
    val CURRENT_RASTER_POSITION = 0xB07
    val CURRENT_RASTER_POSITION_VALID = 0xB08
    val CURRENT_RASTER_DISTANCE = 0xB09
    val POINT_SMOOTH = 0xB10
    val POINT_SIZE = 0xB11
    val POINT_SIZE_RANGE = 0xB12
    val POINT_SIZE_GRANULARITY = 0xB13
    val LINE_SMOOTH = 0xB20
    val LINE_WIDTH = 0xB21
    val LINE_WIDTH_RANGE = 0xB22
    val LINE_WIDTH_GRANULARITY = 0xB23
    val LINE_STIPPLE = 0xB24
    val LINE_STIPPLE_PATTERN = 0xB25
    val LINE_STIPPLE_REPEAT = 0xB26
    val LIST_MODE = 0xB30
    val MAX_LIST_NESTING = 0xB31
    val LIST_BASE = 0xB32
    val LIST_INDEX = 0xB33
    val POLYGON_MODE = 0xB40
    val POLYGON_SMOOTH = 0xB41
    val POLYGON_STIPPLE = 0xB42
    val EDGE_FLAG = 0xB43
    val CULL_FACE = 0xB44
    val CULL_FACE_MODE = 0xB45
    val FRONT_FACE = 0xB46
    val LIGHTING = 0xB50
    val LIGHT_MODEL_LOCAL_VIEWER = 0xB51
    val LIGHT_MODEL_TWO_SIDE = 0xB52
    val LIGHT_MODEL_AMBIENT = 0xB53
    val SHADE_MODEL = 0xB54
    val COLOR_MATERIAL_FACE = 0xB55
    val COLOR_MATERIAL_PARAMETER = 0xB56
    val COLOR_MATERIAL = 0xB57
    val FOG = 0xB60
    val FOG_INDEX = 0xB61
    val FOG_DENSITY = 0xB62
    val FOG_START = 0xB63
    val FOG_END = 0xB64
    val FOG_MODE = 0xB65
    val FOG_COLOR = 0xB66
    val DEPTH_RANGE = 0xB70
    val DEPTH_TEST = 0xB71
    val DEPTH_WRITEMASK = 0xB72
    val DEPTH_CLEAR_VALUE = 0xB73
    val DEPTH_FUNC = 0xB74
    val ACCUM_CLEAR_VALUE = 0xB80
    val STENCIL_TEST = 0xB90
    val STENCIL_CLEAR_VALUE = 0xB91
    val STENCIL_FUNC = 0xB92
    val STENCIL_VALUE_MASK = 0xB93
    val STENCIL_FAIL = 0xB94
    val STENCIL_PASS_DEPTH_FAIL = 0xB95
    val STENCIL_PASS_DEPTH_PASS = 0xB96
    val STENCIL_REF = 0xB97
    val STENCIL_WRITEMASK = 0xB98
    val MATRIX_MODE = 0xBA0
    val NORMALIZE = 0xBA1
    val VIEWPORT = 0xBA2
    val MODELVIEW_STACK_DEPTH = 0xBA3
    val PROJECTION_STACK_DEPTH = 0xBA4
    val TEXTURE_STACK_DEPTH = 0xBA5
    val MODELVIEW_MATRIX = 0xBA6
    val PROJECTION_MATRIX = 0xBA7
    val TEXTURE_MATRIX = 0xBA8
    val ATTRIB_STACK_DEPTH = 0xBB0
    val CLIENT_ATTRIB_STACK_DEPTH = 0xBB1
    val ALPHA_TEST = 0xBC0
    val ALPHA_TEST_FUNC = 0xBC1
    val ALPHA_TEST_REF = 0xBC2
    val DITHER = 0xBD0
    val BLEND_DST = 0xBE0
    val BLEND_SRC = 0xBE1
    val BLEND = 0xBE2
    val LOGIC_OP_MODE = 0xBF0
    val INDEX_LOGIC_OP = 0xBF1
    val COLOR_LOGIC_OP = 0xBF2
    val AUX_BUFFERS = 0xC00
    val DRAW_BUFFER = 0xC01
    val READ_BUFFER = 0xC02
    val SCISSOR_BOX = 0xC10
    val SCISSOR_TEST = 0xC11
    val INDEX_CLEAR_VALUE = 0xC20
    val INDEX_WRITEMASK = 0xC21
    val COLOR_CLEAR_VALUE = 0xC22
    val COLOR_WRITEMASK = 0xC23
    val INDEX_MODE = 0xC30
    val RGBA_MODE = 0xC31
    val DOUBLEBUFFER = 0xC32
    val STEREO = 0xC33
    val RENDER_MODE = 0xC40
    val PERSPECTIVE_CORRECTION_HINT = 0xC50
    val POINT_SMOOTH_HINT = 0xC51
    val LINE_SMOOTH_HINT = 0xC52
    val POLYGON_SMOOTH_HINT = 0xC53
    val FOG_HINT = 0xC54
    val TEXTURE_GEN_S = 0xC60
    val TEXTURE_GEN_T = 0xC61
    val TEXTURE_GEN_R = 0xC62
    val TEXTURE_GEN_Q = 0xC63
    val PIXEL_MAP_I_TO_I = 0xC70
    val PIXEL_MAP_S_TO_S = 0xC71
    val PIXEL_MAP_I_TO_R = 0xC72
    val PIXEL_MAP_I_TO_G = 0xC73
    val PIXEL_MAP_I_TO_B = 0xC74
    val PIXEL_MAP_I_TO_A = 0xC75
    val PIXEL_MAP_R_TO_R = 0xC76
    val PIXEL_MAP_G_TO_G = 0xC77
    val PIXEL_MAP_B_TO_B = 0xC78
    val PIXEL_MAP_A_TO_A = 0xC79
    val PIXEL_MAP_I_TO_I_SIZE = 0xCB0
    val PIXEL_MAP_S_TO_S_SIZE = 0xCB1
    val PIXEL_MAP_I_TO_R_SIZE = 0xCB2
    val PIXEL_MAP_I_TO_G_SIZE = 0xCB3
    val PIXEL_MAP_I_TO_B_SIZE = 0xCB4
    val PIXEL_MAP_I_TO_A_SIZE = 0xCB5
    val PIXEL_MAP_R_TO_R_SIZE = 0xCB6
    val PIXEL_MAP_G_TO_G_SIZE = 0xCB7
    val PIXEL_MAP_B_TO_B_SIZE = 0xCB8
    val PIXEL_MAP_A_TO_A_SIZE = 0xCB9
    val UNPACK_SWAP_BYTES = 0xCF0
    val UNPACK_LSB_FIRST = 0xCF1
    val UNPACK_ROW_LENGTH = 0xCF2
    val UNPACK_SKIP_ROWS = 0xCF3
    val UNPACK_SKIP_PIXELS = 0xCF4
    val UNPACK_ALIGNMENT = 0xCF5
    val PACK_SWAP_BYTES = 0xD00
    val PACK_LSB_FIRST = 0xD01
    val PACK_ROW_LENGTH = 0xD02
    val PACK_SKIP_ROWS = 0xD03
    val PACK_SKIP_PIXELS = 0xD04
    val PACK_ALIGNMENT = 0xD05
    val MAP_COLOR = 0xD10
    val MAP_STENCIL = 0xD11
    val INDEX_SHIFT = 0xD12
    val INDEX_OFFSET = 0xD13
    val RED_SCALE = 0xD14
    val RED_BIAS = 0xD15
    val ZOOM_X = 0xD16
    val ZOOM_Y = 0xD17
    val GREEN_SCALE = 0xD18
    val GREEN_BIAS = 0xD19
    val BLUE_SCALE = 0xD1A
    val BLUE_BIAS = 0xD1B
    val ALPHA_SCALE = 0xD1C
    val ALPHA_BIAS = 0xD1D
    val DEPTH_SCALE = 0xD1E
    val DEPTH_BIAS = 0xD1F
    val MAX_EVAL_ORDER = 0xD30
    val MAX_LIGHTS = 0xD31
    val MAX_CLIP_PLANES = 0xD32
    val MAX_TEXTURE_SIZE = 0xD33
    val MAX_PIXEL_MAP_TABLE = 0xD34
    val MAX_ATTRIB_STACK_DEPTH = 0xD35
    val MAX_MODELVIEW_STACK_DEPTH = 0xD36
    val MAX_NAME_STACK_DEPTH = 0xD37
    val MAX_PROJECTION_STACK_DEPTH = 0xD38
    val MAX_TEXTURE_STACK_DEPTH = 0xD39
    val MAX_VIEWPORT_DIMS = 0xD3A
    val MAX_CLIENT_ATTRIB_STACK_DEPTH = 0xD3B
    val SUBPIXEL_BITS = 0xD50
    val INDEX_BITS = 0xD51
    val RED_BITS = 0xD52
    val GREEN_BITS = 0xD53
    val BLUE_BITS = 0xD54
    val ALPHA_BITS = 0xD55
    val DEPTH_BITS = 0xD56
    val STENCIL_BITS = 0xD57
    val ACCUM_RED_BITS = 0xD58
    val ACCUM_GREEN_BITS = 0xD59
    val ACCUM_BLUE_BITS = 0xD5A
    val ACCUM_ALPHA_BITS = 0xD5B
    val NAME_STACK_DEPTH = 0xD70
    val AUTO_NORMAL = 0xD80
    val MAP1_COLOR_4 = 0xD90
    val MAP1_INDEX = 0xD91
    val MAP1_NORMAL = 0xD92
    val MAP1_TEXTURE_COORD_1 = 0xD93
    val MAP1_TEXTURE_COORD_2 = 0xD94
    val MAP1_TEXTURE_COORD_3 = 0xD95
    val MAP1_TEXTURE_COORD_4 = 0xD96
    val MAP1_VERTEX_3 = 0xD97
    val MAP1_VERTEX_4 = 0xD98
    val MAP2_COLOR_4 = 0xDB0
    val MAP2_INDEX = 0xDB1
    val MAP2_NORMAL = 0xDB2
    val MAP2_TEXTURE_COORD_1 = 0xDB3
    val MAP2_TEXTURE_COORD_2 = 0xDB4
    val MAP2_TEXTURE_COORD_3 = 0xDB5
    val MAP2_TEXTURE_COORD_4 = 0xDB6
    val MAP2_VERTEX_3 = 0xDB7
    val MAP2_VERTEX_4 = 0xDB8
    val MAP1_GRID_DOMAIN = 0xDD0
    val MAP1_GRID_SEGMENTS = 0xDD1
    val MAP2_GRID_DOMAIN = 0xDD2
    val MAP2_GRID_SEGMENTS = 0xDD3
    val TEXTURE_1D = 0xDE0
    val TEXTURE_2D = 0xDE1
    val FEEDBACK_BUFFER_POINTER = 0xDF0
    val FEEDBACK_BUFFER_SIZE = 0xDF1
    val FEEDBACK_BUFFER_TYPE = 0xDF2
    val SELECTION_BUFFER_POINTER = 0xDF3
    val SELECTION_BUFFER_SIZE = 0xDF4
    val TEXTURE_WIDTH = 0x1000
    val TEXTURE_HEIGHT = 0x1001
    val TEXTURE_INTERNAL_FORMAT = 0x1003
    val TEXTURE_BORDER_COLOR = 0x1004
    val TEXTURE_BORDER = 0x1005
    val DONT_CARE = 0x1100
    val FASTEST = 0x1101
    val NICEST = 0x1102
    val LIGHT0 = 0x4000
    val LIGHT1 = 0x4001
    val LIGHT2 = 0x4002
    val LIGHT3 = 0x4003
    val LIGHT4 = 0x4004
    val LIGHT5 = 0x4005
    val LIGHT6 = 0x4006
    val LIGHT7 = 0x4007
    val AMBIENT = 0x1200
    val DIFFUSE = 0x1201
    val SPECULAR = 0x1202
    val POSITION = 0x1203
    val SPOT_DIRECTION = 0x1204
    val SPOT_EXPONENT = 0x1205
    val SPOT_CUTOFF = 0x1206
    val CONSTANT_ATTENUATION = 0x1207
    val LINEAR_ATTENUATION = 0x1208
    val QUADRATIC_ATTENUATION = 0x1209
    val COMPILE = 0x1300
    val COMPILE_AND_EXECUTE = 0x1301
    val CLEAR = 0x1500
    val AND = 0x1501
    val AND_REVERSE = 0x1502
    val COPY = 0x1503
    val AND_INVERTED = 0x1504
    val NOOP = 0x1505
    val XOR = 0x1506
    val OR = 0x1507
    val NOR = 0x1508
    val EQUIV = 0x1509
    val INVERT = 0x150A
    val OR_REVERSE = 0x150B
    val COPY_INVERTED = 0x150C
    val OR_INVERTED = 0x150D
    val NAND = 0x150E
    val SET = 0x150F
    val EMISSION = 0x1600
    val SHININESS = 0x1601
    val AMBIENT_AND_DIFFUSE = 0x1602
    val COLOR_INDEXES = 0x1603
    val MODELVIEW = 0x1700
    val PROJECTION = 0x1701
    val TEXTURE = 0x1702
    val COLOR = 0x1800
    val DEPTH = 0x1801
    val STENCIL = 0x1802
    val COLOR_INDEX = 0x1900
    val STENCIL_INDEX = 0x1901
    val DEPTH_COMPONENT = 0x1902
    val RED = 0x1903
    val GREEN = 0x1904
    val BLUE = 0x1905
    val ALPHA = 0x1906
    val RGB = 0x1907
    val RGBA = 0x1908
    val LUMINANCE = 0x1909
    val LUMINANCE_ALPHA = 0x190A
    val BITMAP = 0x1A00
    val POINT = 0x1B00
    val LINE = 0x1B01
    val FILL = 0x1B02
    val RENDER = 0x1C00
    val FEEDBACK = 0x1C01
    val SELECT = 0x1C02
    val FLAT = 0x1D00
    val SMOOTH = 0x1D01
    val KEEP = 0x1E00
    val REPLACE = 0x1E01
    val INCR = 0x1E02
    val DECR = 0x1E03
    val VENDOR = 0x1F00
    val RENDERER = 0x1F01
    val VERSION = 0x1F02
    val EXTENSIONS = 0x1F03
    val S = 0x2000
    val T = 0x2001
    val R = 0x2002
    val Q = 0x2003
    val MODULATE = 0x2100
    val DECAL = 0x2101
    val TEXTURE_ENV_MODE = 0x2200
    val TEXTURE_ENV_COLOR = 0x2201
    val TEXTURE_ENV = 0x2300
    val EYE_LINEAR = 0x2400
    val OBJECT_LINEAR = 0x2401
    val SPHERE_MAP = 0x2402
    val TEXTURE_GEN_MODE = 0x2500
    val OBJECT_PLANE = 0x2501
    val EYE_PLANE = 0x2502
    val NEAREST = 0x2600
    val LINEAR = 0x2601
    val NEAREST_MIPMAP_NEAREST = 0x2700
    val LINEAR_MIPMAP_NEAREST = 0x2701
    val NEAREST_MIPMAP_LINEAR = 0x2702
    val LINEAR_MIPMAP_LINEAR = 0x2703
    val TEXTURE_MAG_FILTER = 0x2800
    val TEXTURE_MIN_FILTER = 0x2801
    val TEXTURE_WRAP_S = 0x2802
    val TEXTURE_WRAP_T = 0x2803
    val CLAMP = 0x2900
    val REPEAT = 0x2901
    val CLIENT_PIXEL_STORE_BIT = 0x1
    val CLIENT_VERTEX_ARRAY_BIT = 0x2
    val ALL_CLIENT_ATTRIB_BITS = -0x1
    val POLYGON_OFFSET_FACTOR = 0x8038
    val POLYGON_OFFSET_UNITS = 0x2A00
    val POLYGON_OFFSET_POINT = 0x2A01
    val POLYGON_OFFSET_LINE = 0x2A02
    val POLYGON_OFFSET_FILL = 0x8037
    val ALPHA4 = 0x803B
    val ALPHA8 = 0x803C
    val ALPHA12 = 0x803D
    val ALPHA16 = 0x803E
    val LUMINANCE4 = 0x803F
    val LUMINANCE8 = 0x8040
    val LUMINANCE12 = 0x8041
    val LUMINANCE16 = 0x8042
    val LUMINANCE4_ALPHA4 = 0x8043
    val LUMINANCE6_ALPHA2 = 0x8044
    val LUMINANCE8_ALPHA8 = 0x8045
    val LUMINANCE12_ALPHA4 = 0x8046
    val LUMINANCE12_ALPHA12 = 0x8047
    val LUMINANCE16_ALPHA16 = 0x8048
    val INTENSITY = 0x8049
    val INTENSITY4 = 0x804A
    val INTENSITY8 = 0x804B
    val INTENSITY12 = 0x804C
    val INTENSITY16 = 0x804D
    val R3_G3_B2 = 0x2A10
    val RGB4 = 0x804F
    val RGB5 = 0x8050
    val RGB8 = 0x8051
    val RGB10 = 0x8052
    val RGB12 = 0x8053
    val RGB16 = 0x8054
    val RGBA2 = 0x8055
    val RGBA4 = 0x8056
    val RGB5_A1 = 0x8057
    val RGBA8 = 0x8058
    val RGB10_A2 = 0x8059
    val RGBA12 = 0x805A
    val RGBA16 = 0x805B
    val TEXTURE_RED_SIZE = 0x805C
    val TEXTURE_GREEN_SIZE = 0x805D
    val TEXTURE_BLUE_SIZE = 0x805E
    val TEXTURE_ALPHA_SIZE = 0x805F
    val TEXTURE_LUMINANCE_SIZE = 0x8060
    val TEXTURE_INTENSITY_SIZE = 0x8061
    val PROXY_TEXTURE_1D = 0x8063
    val PROXY_TEXTURE_2D = 0x8064
    val TEXTURE_PRIORITY = 0x8066
    val TEXTURE_RESIDENT = 0x8067
    val TEXTURE_BINDING_1D = 0x8068
    val TEXTURE_BINDING_2D = 0x8069
    val VERTEX_ARRAY = 0x8074
    val NORMAL_ARRAY = 0x8075
    val COLOR_ARRAY = 0x8076
    val INDEX_ARRAY = 0x8077
    val TEXTURE_COORD_ARRAY = 0x8078
    val EDGE_FLAG_ARRAY = 0x8079
    val VERTEX_ARRAY_SIZE = 0x807A
    val VERTEX_ARRAY_TYPE = 0x807B
    val VERTEX_ARRAY_STRIDE = 0x807C
    val NORMAL_ARRAY_TYPE = 0x807E
    val NORMAL_ARRAY_STRIDE = 0x807F
    val COLOR_ARRAY_SIZE = 0x8081
    val COLOR_ARRAY_TYPE = 0x8082
    val COLOR_ARRAY_STRIDE = 0x8083
    val INDEX_ARRAY_TYPE = 0x8085
    val INDEX_ARRAY_STRIDE = 0x8086
    val TEXTURE_COORD_ARRAY_SIZE = 0x8088
    val TEXTURE_COORD_ARRAY_TYPE = 0x8089
    val TEXTURE_COORD_ARRAY_STRIDE = 0x808A
    val EDGE_FLAG_ARRAY_STRIDE = 0x808C
    val VERTEX_ARRAY_POINTER = 0x808E
    val NORMAL_ARRAY_POINTER = 0x808F
    val COLOR_ARRAY_POINTER = 0x8090
    val INDEX_ARRAY_POINTER = 0x8091
    val TEXTURE_COORD_ARRAY_POINTER = 0x8092
    val EDGE_FLAG_ARRAY_POINTER = 0x8093
    val V2F = 0x2A20
    val V3F = 0x2A21
    val C4UB_V2F = 0x2A22
    val C4UB_V3F = 0x2A23
    val C3F_V3F = 0x2A24
    val N3F_V3F = 0x2A25
    val C4F_N3F_V3F = 0x2A26
    val T2F_V3F = 0x2A27
    val T4F_V4F = 0x2A28
    val T2F_C4UB_V3F = 0x2A29
    val T2F_C3F_V3F = 0x2A2A
    val T2F_N3F_V3F = 0x2A2B
    val T2F_C4F_N3F_V3F = 0x2A2C
    val T4F_C4F_N3F_V4F = 0x2A2D
    val LOGIC_OP = 0xBF1
    val TEXTURE_COMPONENTS = 0x1003
    
    fun pushMatrix() = glPushMatrix()

    fun popMatrix() = glPopMatrix()

    fun accum(op: Int, value: Float) = glAccum(op, value)

    fun alphaFunc(func: Int, ref: Float) = glAlphaFunc(func, ref)

    fun clearColor(red: Float, green: Float, blue: Float, alpha: Float) = glClearColor(red, green, blue, alpha)

    fun clearAccum(red: F, green: F, blue: F, alpha: F) = glClearAccum(red, green, blue, alpha)

    fun clear(mask: I) = glClear(mask)

    fun callLists(lists: BBuffer) = glCallLists(lists)

    fun callLists(lists: IBuffer) = glCallLists(lists)

    fun callLists(lists: SBuffer) = glCallLists(lists)

    fun callList(list: I) = glCallList(list)

    fun blendFunc(sfactor: I, dfactor: I) = glBlendFunc(sfactor, dfactor)

    fun bitmap(width: Int, height: Int, xorig: Float, yorig: Float, xmove: Float, ymove: Float, bitmap: ByteBuffer) = glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)

    fun bitMap(width: Int, height: Int, xorig: Float, yorig: Float, xmove: Float, ymove: Float, bitmap_buffer_offset: Long) = glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap_buffer_offset)

    fun bindTexture(target: I, texture: I) = glBindTexture(target, texture)

    // TODO: 2021/12/9 Finish it
}